primary:
  connections:
    downstream:
      n0:
        ids:
        - end-node
      start-node:
        ids:
        - n0
    upstream:
      end-node:
        ids:
        - n0
      n0:
        ids:
        - start-node
  template:
    id:
      name: core.control_flow.conditions.bool_input_wf
      resource_type: 2
    interface:
      inputs:
        variables:
          b:
            description: b
            type:
              Type:
                Simple: 4
      outputs:
        variables:
          o0:
            description: o0
            type:
              Type:
                Simple: 1
    metadata: {}
    metadata_defaults: {}
    nodes:
    - Target: null
      id: start-node
    - Target: null
      id: end-node
      inputs:
      - binding:
          Value:
            Promise:
              node_id: n0
              var: o0
        var: o0
    - Target:
        BranchNode:
          if_else:
            Default:
              ElseNode:
                Target:
                  TaskNode:
                    Reference:
                      ReferenceId:
                        name: core.control_flow.conditions.failed
                        resource_type: 1
                    overrides: {}
                id: n0-n1
                metadata:
                  InterruptibleValue: null
                  name: failed
                  retries: {}
            case:
              condition:
                Expr:
                  Comparison:
                    left_value:
                      Val:
                        Var: .b
                    right_value:
                      Val:
                        Primitive:
                          Value:
                            Boolean: true
              then_node:
                Target:
                  TaskNode:
                    Reference:
                      ReferenceId:
                        name: core.control_flow.conditions.success
                        resource_type: 1
                    overrides: {}
                id: n0-n0
                metadata:
                  InterruptibleValue: null
                  name: success
                  retries: {}
      id: n0
      inputs:
      - binding:
          Value:
            Promise:
              node_id: start-node
              var: b
        var: .b
      metadata:
        InterruptibleValue: null
        name: test
        retries: {}
    outputs:
    - binding:
        Value:
          Promise:
            node_id: n0
            var: o0
      var: o0
tasks:
- template:
    Target:
      Container:
        args:
        - pyflyte-execute
        - --inputs
        - '{{.input}}'
        - --output-prefix
        - '{{.outputPrefix}}'
        - --raw-output-data-prefix
        - '{{.rawOutputDataPrefix}}'
        - --checkpoint-path
        - '{{.checkpointOutputPrefix}}'
        - --prev-checkpoint
        - '{{.prevCheckpointPrefix}}'
        - --resolver
        - flytekit.core.python_auto_container.default_task_resolver
        - --
        - task-module
        - core.control_flow.conditions
        - task-name
        - failed
        config:
        - key: testKey1
          value: testValue1
        - key: testKey2
          value: testValue2
        - key: testKey3
          value: testValue3
        image: ghcr.io/flyteorg/flytecookbook:core-8b8e1a849c9adfca88049a074b10dad278f70077
        resources: {}
    id:
      name: core.control_flow.conditions.failed
      resource_type: 1
    interface:
      inputs: {}
      outputs:
        variables:
          o0:
            description: o0
            type:
              Type:
                Simple: 1
    metadata:
      InterruptibleValue: null
      retries: {}
      runtime:
        flavor: python
        type: 1
        version: 0.32.6
    type: python-task
- template:
    Target:
      Container:
        args:
        - pyflyte-execute
        - --inputs
        - '{{.input}}'
        - --output-prefix
        - '{{.outputPrefix}}'
        - --raw-output-data-prefix
        - '{{.rawOutputDataPrefix}}'
        - --checkpoint-path
        - '{{.checkpointOutputPrefix}}'
        - --prev-checkpoint
        - '{{.prevCheckpointPrefix}}'
        - --resolver
        - flytekit.core.python_auto_container.default_task_resolver
        - --
        - task-module
        - core.control_flow.conditions
        - task-name
        - success
        config:
        - key: testKey1
          value: testValue1
        - key: testKey2
          value: testValue2
        - key: testKey3
          value: testValue3
        image: ghcr.io/flyteorg/flytecookbook:core-8b8e1a849c9adfca88049a074b10dad278f70077
        resources: {}
    id:
      name: core.control_flow.conditions.success
      resource_type: 1
    interface:
      inputs: {}
      outputs:
        variables:
          o0:
            description: o0
            type:
              Type:
                Simple: 1
    metadata:
      InterruptibleValue: null
      retries: {}
      runtime:
        flavor: python
        type: 1
        version: 0.32.6
    type: python-task
