primary:
  connections:
    downstream:
      n0:
        ids:
        - end-node
      n1:
        ids:
        - end-node
      n2:
        ids:
        - end-node
      start-node:
        ids:
        - n0
        - n1
        - n2
    upstream:
      end-node:
        ids:
        - n0
        - n1
        - n2
      n0:
        ids:
        - start-node
      n1:
        ids:
        - start-node
      n2:
        ids:
        - start-node
  template:
    id:
      name: core.containerization.use_secrets.my_secret_workflow
      resource_type: 2
    interface:
      inputs: {}
      outputs:
        variables:
          o0:
            description: o0
            type:
              Type:
                Simple: 3
          o1:
            description: o1
            type:
              Type:
                Simple: 3
          o2:
            description: o2
            type:
              Type:
                Simple: 3
          o3:
            description: o3
            type:
              Type:
                Simple: 3
          o4:
            description: o4
            type:
              Type:
                Simple: 3
    metadata: {}
    metadata_defaults: {}
    nodes:
    - Target: null
      id: start-node
    - Target: null
      id: end-node
      inputs:
      - binding:
          Value:
            Promise:
              node_id: n0
              var: o0
        var: o0
      - binding:
          Value:
            Promise:
              node_id: n1
              var: o0
        var: o1
      - binding:
          Value:
            Promise:
              node_id: n1
              var: o1
        var: o2
      - binding:
          Value:
            Promise:
              node_id: n2
              var: o0
        var: o3
      - binding:
          Value:
            Promise:
              node_id: n2
              var: o1
        var: o4
    - Target:
        TaskNode:
          Reference:
            ReferenceId:
              name: core.containerization.use_secrets.secret_task
              resource_type: 1
          overrides: {}
      id: n0
      metadata:
        InterruptibleValue: null
        name: secret_task
        retries: {}
    - Target:
        TaskNode:
          Reference:
            ReferenceId:
              name: core.containerization.use_secrets.user_info_task
              resource_type: 1
          overrides: {}
      id: n1
      metadata:
        InterruptibleValue: null
        name: user_info_task
        retries: {}
    - Target:
        TaskNode:
          Reference:
            ReferenceId:
              name: core.containerization.use_secrets.secret_file_task
              resource_type: 1
          overrides: {}
      id: n2
      metadata:
        InterruptibleValue: null
        name: secret_file_task
        retries: {}
    outputs:
    - binding:
        Value:
          Promise:
            node_id: n0
            var: o0
      var: o0
    - binding:
        Value:
          Promise:
            node_id: n1
            var: o0
      var: o1
    - binding:
        Value:
          Promise:
            node_id: n1
            var: o1
      var: o2
    - binding:
        Value:
          Promise:
            node_id: n2
            var: o0
      var: o3
    - binding:
        Value:
          Promise:
            node_id: n2
            var: o1
      var: o4
tasks:
- template:
    Target:
      Container:
        args:
        - pyflyte-execute
        - --inputs
        - '{{.input}}'
        - --output-prefix
        - '{{.outputPrefix}}'
        - --raw-output-data-prefix
        - '{{.rawOutputDataPrefix}}'
        - --checkpoint-path
        - '{{.checkpointOutputPrefix}}'
        - --prev-checkpoint
        - '{{.prevCheckpointPrefix}}'
        - --resolver
        - flytekit.core.python_auto_container.default_task_resolver
        - --
        - task-module
        - core.containerization.use_secrets
        - task-name
        - secret_file_task
        config:
        - key: testKey1
          value: testValue1
        - key: testKey2
          value: testValue2
        - key: testKey3
          value: testValue3
        image: ghcr.io/flyteorg/flytecookbook:core-8b8e1a849c9adfca88049a074b10dad278f70077
        resources: {}
    id:
      name: core.containerization.use_secrets.secret_file_task
      resource_type: 1
    interface:
      inputs: {}
      outputs:
        variables:
          o0:
            description: o0
            type:
              Type:
                Simple: 3
          o1:
            description: o1
            type:
              Type:
                Simple: 3
    metadata:
      InterruptibleValue: null
      retries: {}
      runtime:
        flavor: python
        type: 1
        version: 0.32.6
    security_context:
      secrets:
      - group: user-info
        key: user_secret
        mount_requirement: 1
    type: python-task
- template:
    Target:
      Container:
        args:
        - pyflyte-execute
        - --inputs
        - '{{.input}}'
        - --output-prefix
        - '{{.outputPrefix}}'
        - --raw-output-data-prefix
        - '{{.rawOutputDataPrefix}}'
        - --checkpoint-path
        - '{{.checkpointOutputPrefix}}'
        - --prev-checkpoint
        - '{{.prevCheckpointPrefix}}'
        - --resolver
        - flytekit.core.python_auto_container.default_task_resolver
        - --
        - task-module
        - core.containerization.use_secrets
        - task-name
        - secret_task
        config:
        - key: testKey1
          value: testValue1
        - key: testKey2
          value: testValue2
        - key: testKey3
          value: testValue3
        image: ghcr.io/flyteorg/flytecookbook:core-8b8e1a849c9adfca88049a074b10dad278f70077
        resources: {}
    id:
      name: core.containerization.use_secrets.secret_task
      resource_type: 1
    interface:
      inputs: {}
      outputs:
        variables:
          o0:
            description: o0
            type:
              Type:
                Simple: 3
    metadata:
      InterruptibleValue: null
      retries: {}
      runtime:
        flavor: python
        type: 1
        version: 0.32.6
    security_context:
      secrets:
      - group: user-info
        key: user_secret
    type: python-task
- template:
    Target:
      Container:
        args:
        - pyflyte-execute
        - --inputs
        - '{{.input}}'
        - --output-prefix
        - '{{.outputPrefix}}'
        - --raw-output-data-prefix
        - '{{.rawOutputDataPrefix}}'
        - --checkpoint-path
        - '{{.checkpointOutputPrefix}}'
        - --prev-checkpoint
        - '{{.prevCheckpointPrefix}}'
        - --resolver
        - flytekit.core.python_auto_container.default_task_resolver
        - --
        - task-module
        - core.containerization.use_secrets
        - task-name
        - user_info_task
        config:
        - key: testKey1
          value: testValue1
        - key: testKey2
          value: testValue2
        - key: testKey3
          value: testValue3
        image: ghcr.io/flyteorg/flytecookbook:core-8b8e1a849c9adfca88049a074b10dad278f70077
        resources: {}
    id:
      name: core.containerization.use_secrets.user_info_task
      resource_type: 1
    interface:
      inputs: {}
      outputs:
        variables:
          o0:
            description: o0
            type:
              Type:
                Simple: 3
          o1:
            description: o1
            type:
              Type:
                Simple: 3
    metadata:
      InterruptibleValue: null
      retries: {}
      runtime:
        flavor: python
        type: 1
        version: 0.32.6
    security_context:
      secrets:
      - group: user-info
        key: username
      - group: user-info
        key: password
    type: python-task
