// Code generated by mockery v1.0.1. DO NOT EDIT.

package mocks

import (
	v1alpha1 "github.com/lyft/flytepropeller/pkg/apis/flyteworkflow/v1alpha1"
	mock "github.com/stretchr/testify/mock"
)

// MutableSubWorkflowNodeStatus is an autogenerated mock type for the MutableSubWorkflowNodeStatus type
type MutableSubWorkflowNodeStatus struct {
	mock.Mock
}

type MutableSubWorkflowNodeStatus_GetPhase struct {
	*mock.Call
}

func (_m MutableSubWorkflowNodeStatus_GetPhase) Return(_a0 v1alpha1.WorkflowPhase) *MutableSubWorkflowNodeStatus_GetPhase {
	return &MutableSubWorkflowNodeStatus_GetPhase{Call: _m.Call.Return(_a0)}
}

func (_m *MutableSubWorkflowNodeStatus) OnGetPhase() *MutableSubWorkflowNodeStatus_GetPhase {
	c := _m.On("GetPhase")
	return &MutableSubWorkflowNodeStatus_GetPhase{Call: c}
}

func (_m *MutableSubWorkflowNodeStatus) OnGetPhaseMatch(matchers ...interface{}) *MutableSubWorkflowNodeStatus_GetPhase {
	c := _m.On("GetPhase", matchers...)
	return &MutableSubWorkflowNodeStatus_GetPhase{Call: c}
}

// GetPhase provides a mock function with given fields:
func (_m *MutableSubWorkflowNodeStatus) GetPhase() v1alpha1.WorkflowPhase {
	ret := _m.Called()

	var r0 v1alpha1.WorkflowPhase
	if rf, ok := ret.Get(0).(func() v1alpha1.WorkflowPhase); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(v1alpha1.WorkflowPhase)
	}

	return r0
}

// SetPhase provides a mock function with given fields: phase
func (_m *MutableSubWorkflowNodeStatus) SetPhase(phase v1alpha1.WorkflowPhase) {
	_m.Called(phase)
}
