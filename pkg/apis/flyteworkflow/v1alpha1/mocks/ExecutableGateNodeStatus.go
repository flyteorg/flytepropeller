// Code generated by mockery v1.0.1. DO NOT EDIT.

package mocks

import (
	v1alpha1 "github.com/flyteorg/flytepropeller/pkg/apis/flyteworkflow/v1alpha1"
	mock "github.com/stretchr/testify/mock"
)

// ExecutableGateNodeStatus is an autogenerated mock type for the ExecutableGateNodeStatus type
type ExecutableGateNodeStatus struct {
	mock.Mock
}

type ExecutableGateNodeStatus_GetGateNodePhase struct {
	*mock.Call
}

func (_m ExecutableGateNodeStatus_GetGateNodePhase) Return(_a0 v1alpha1.GateNodePhase) *ExecutableGateNodeStatus_GetGateNodePhase {
	return &ExecutableGateNodeStatus_GetGateNodePhase{Call: _m.Call.Return(_a0)}
}

func (_m *ExecutableGateNodeStatus) OnGetGateNodePhase() *ExecutableGateNodeStatus_GetGateNodePhase {
	c_call := _m.On("GetGateNodePhase")
	return &ExecutableGateNodeStatus_GetGateNodePhase{Call: c_call}
}

func (_m *ExecutableGateNodeStatus) OnGetGateNodePhaseMatch(matchers ...interface{}) *ExecutableGateNodeStatus_GetGateNodePhase {
	c_call := _m.On("GetGateNodePhase", matchers...)
	return &ExecutableGateNodeStatus_GetGateNodePhase{Call: c_call}
}

// GetGateNodePhase provides a mock function with given fields:
func (_m *ExecutableGateNodeStatus) GetGateNodePhase() v1alpha1.GateNodePhase {
	ret := _m.Called()

	var r0 v1alpha1.GateNodePhase
	if rf, ok := ret.Get(0).(func() v1alpha1.GateNodePhase); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(v1alpha1.GateNodePhase)
	}

	return r0
}
