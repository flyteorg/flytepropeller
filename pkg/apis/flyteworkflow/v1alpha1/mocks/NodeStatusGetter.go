// Code generated by mockery v1.0.1. DO NOT EDIT.

package mocks

import (
	v1alpha1 "github.com/lyft/flytepropeller/pkg/apis/flyteworkflow/v1alpha1"
	mock "github.com/stretchr/testify/mock"
)

// NodeStatusGetter is an autogenerated mock type for the NodeStatusGetter type
type NodeStatusGetter struct {
	mock.Mock
}

type NodeStatusGetter_GetNodeExecutionStatus struct {
	*mock.Call
}

func (_m NodeStatusGetter_GetNodeExecutionStatus) Return(_a0 v1alpha1.ExecutableNodeStatus) *NodeStatusGetter_GetNodeExecutionStatus {
	return &NodeStatusGetter_GetNodeExecutionStatus{Call: _m.Call.Return(_a0)}
}

func (_m *NodeStatusGetter) OnGetNodeExecutionStatus(id string) *NodeStatusGetter_GetNodeExecutionStatus {
	c := _m.On("GetNodeExecutionStatus", id)
	return &NodeStatusGetter_GetNodeExecutionStatus{Call: c}
}

func (_m *NodeStatusGetter) OnGetNodeExecutionStatusMatch(matchers ...interface{}) *NodeStatusGetter_GetNodeExecutionStatus {
	c := _m.On("GetNodeExecutionStatus", matchers...)
	return &NodeStatusGetter_GetNodeExecutionStatus{Call: c}
}

// GetNodeExecutionStatus provides a mock function with given fields: id
func (_m *NodeStatusGetter) GetNodeExecutionStatus(id string) v1alpha1.ExecutableNodeStatus {
	ret := _m.Called(id)

	var r0 v1alpha1.ExecutableNodeStatus
	if rf, ok := ret.Get(0).(func(string) v1alpha1.ExecutableNodeStatus); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1alpha1.ExecutableNodeStatus)
		}
	}

	return r0
}
